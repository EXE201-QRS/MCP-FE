name: Build and Publish Docker Image

on:
  push:
    branches: [main]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Create .env file
        run: echo "${{secrets.ENV_PRODUCTION}}" | base64 -d > .env

      - name: Build and tag Docker image
        run: docker build -t ${{secrets.DOCKER_HUB_USERNAME}}/qos-mcp:latest .

      - name: Push Docker image to Dockerhub
        run: docker push ${{secrets.DOCKER_HUB_USERNAME}}/qos-mcp:latest

      - name: Update image metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{secrets.DOCKER_HUB_USERNAME}}/qos-mcp:latest
          tags: |
            ${{github.sha}}

  deployment:
    runs-on: ubuntu-latest
    needs: build-and-publish

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            mkdir -p ~/qos-mcp

            cd ~/qos-mcp

            if [ ! -f docker-compose.yml ]; then
              cat > docker-compose.yml << 'EOL'
            version: '3.8'

            services:
              qos-mcp:
                image: ${{ secrets.DOCKER_HUB_USERNAME }}/qos-mcp:latest
                ports:
                  - "5000:5000"
                restart: always
                env_file:
                  - .env
            EOL
            fi

            echo "${{secrets.ENV_PRODUCTION}}" | base64 -d > .env

            docker compose down || true

            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/qos-mcp:latest

            docker compose up -d

            docker compose logs --tail=20 qos-mcp

            docker ps -a | grep qos-mcp
